{"ast":null,"code":"export class AppComponent {\n  title = 'rock-paper-scissors';\n  isOptionSelected = false;\n  optionSelectedByFirstPlayer = '';\n  optionSelectedBySecondPlayer = '';\n  matchFinished = false;\n  isFirstPlayerTheWinner = false;\n\n  constructor() {}\n\n  selectedOption(option) {\n    console.log(option);\n    this.isOptionSelected = true;\n    this.optionSelectedByFirstPlayer = option;\n    let aleatorio = Math.floor(Math.random() * 3);\n    let icon = 'paper-icon';\n\n    switch (aleatorio) {\n      case 0:\n        icon = 'paper-icon';\n        break;\n\n      case 1:\n        icon = 'scissors-icon';\n        break;\n\n      case 2:\n        icon = 'rock-icon';\n        break;\n    }\n\n    this.optionSelectedBySecondPlayer = icon;\n\n    if (this.optionSelectedByFirstPlayer === 'scissors-icon' && this.optionSelectedBySecondPlayer === 'paper-icon' || this.optionSelectedByFirstPlayer === 'paper-icon' && this.optionSelectedBySecondPlayer === 'rock-icon' || this.optionSelectedByFirstPlayer === 'rock-icon' && this.optionSelectedBySecondPlayer === 'scissors-icon') {\n      this.isFirstPlayerTheWinner = true;\n    }\n  }\n\n  checkIfFirstPlayerWin() {\n    const winMap = {\n      'scissors-icon': 'paper-icon',\n      'paper-icon': 'rock-icon',\n      'rock-icon': 'scissors-icon'\n    };\n    this.isFirstPlayerTheWinner = winMap[this.optionSelectedByFirstPlayer] === this.optionSelectedBySecondPlayer;\n  }\n\n}","map":{"version":3,"sources":["C:\\Propio\\rock-paper-scissors\\src\\app\\app.component.ts"],"names":[],"mappings":"AAQA,OAAM,MAAO,YAAP,CAAmB;AACvB,EAAA,KAAK,GAAG,qBAAH;AACL,EAAA,gBAAgB,GAAG,KAAH;AAChB,EAAA,2BAA2B,GAAG,EAAH;AAC3B,EAAA,4BAA4B,GAAG,EAAH;AAC5B,EAAA,aAAa,GAAG,KAAH;AACb,EAAA,sBAAsB,GAAG,KAAH;;AACtB,EAAA,WAAA,GAAA,CAAgB;;AACT,EAAA,cAAc,CAAC,MAAD,EAAc;AACjC,IAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AACA,SAAK,gBAAL,GAAwB,IAAxB;AACA,SAAK,2BAAL,GAAmC,MAAnC;AACA,QAAI,SAAS,GAAG,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,CAA3B,CAAhB;AACA,QAAI,IAAI,GAAG,YAAX;;AACA,YAAQ,SAAR;AACE,WAAK,CAAL;AACE,QAAA,IAAI,GAAG,YAAP;AACA;;AACF,WAAK,CAAL;AACE,QAAA,IAAI,GAAG,eAAP;AAEA;;AACF,WAAK,CAAL;AACE,QAAA,IAAI,GAAG,WAAP;AACA;AAVJ;;AAYA,SAAK,4BAAL,GAAkC,IAAlC;;AACA,QAAI,KAAK,2BAAL,KAAqC,eAArC,IAAyD,KAAK,4BAAL,KAAsC,YAA/F,IAA+G,KAAK,2BAAL,KAAqC,YAArC,IAAsD,KAAK,4BAAL,KAAsC,WAA3M,IAA0N,KAAK,2BAAL,KAAqC,WAArC,IAAqD,KAAK,4BAAL,KAAsC,eAAzT,EAA0U;AACxU,WAAK,sBAAL,GAA8B,IAA9B;AACD;AACF;;AACM,EAAA,qBAAqB,GAAA;AAC1B,UAAM,MAAM,GAAG;AACb,uBAAiB,YADJ;AAEb,oBAAc,WAFD;AAGb,mBAAa;AAHA,KAAf;AAMA,SAAK,sBAAL,GAA8B,MAAM,CAAC,KAAK,2BAAN,CAAN,KAA6C,KAAK,4BAAhF;AACD;;AAvCsB","sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\ntype GameOption = 'scissors-icon' | 'paper-icon' | 'rock-icon';\nexport class AppComponent {\n  title = 'rock-paper-scissors';\n  isOptionSelected = false;\n  optionSelectedByFirstPlayer = '';\n  optionSelectedBySecondPlayer = '';\n  matchFinished = false;\n  isFirstPlayerTheWinner = false;\n  constructor() {}\n  public selectedOption(option:string){\n    console.log(option);\n    this.isOptionSelected = true;\n    this.optionSelectedByFirstPlayer = option;\n    let aleatorio = Math.floor(Math.random() * 3);\n    let icon = 'paper-icon';\n    switch (aleatorio) {\n      case 0:\n        icon = 'paper-icon';\n        break;\n      case 1:\n        icon = 'scissors-icon';\n\n        break;\n      case 2:\n        icon = 'rock-icon';\n        break;\n    }\n    this.optionSelectedBySecondPlayer=icon;\n    if (this.optionSelectedByFirstPlayer === 'scissors-icon' &&  this.optionSelectedBySecondPlayer === 'paper-icon' || this.optionSelectedByFirstPlayer === 'paper-icon' &&  this.optionSelectedBySecondPlayer === 'rock-icon' || this.optionSelectedByFirstPlayer === 'rock-icon' &&  this.optionSelectedBySecondPlayer === 'scissors-icon') {\n      this.isFirstPlayerTheWinner = true;\n    }\n  }\n  public checkIfFirstPlayerWin(){\n    const winMap = {\n      'scissors-icon': 'paper-icon',\n      'paper-icon': 'rock-icon',\n      'rock-icon': 'scissors-icon'\n    };\n\n    this.isFirstPlayerTheWinner = winMap[this.optionSelectedByFirstPlayer] === this.optionSelectedBySecondPlayer;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module","externalDependencies":[]}